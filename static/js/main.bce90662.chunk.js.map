{"version":3,"sources":["images/header.jpeg","components/Nav/Nav.jsx","components/Main/Main.jsx","components/Dictionary/Dictionary.jsx","images/arrow.png","components/AddForm/AddForm.jsx","components/Stat.jsx","components/Result.jsx","components/NotFound.jsx","components/Test.jsx","App.jsx","index.jsx"],"names":["Nav","className","to","src","headerImage","alt","Main","Dictionary","dictionary","useSelector","store","length","map","currentWord","index","word","translate","id","AddForm","dispatch","useDispatch","useState","setWord","setTranslate","error","setError","navigate","useNavigate","type","placeholder","value","onChange","e","target","required","arrowImage","onClick","find","checkWord","newWord","Date","getTime","payload","handleAdderToDictionary","hidden","style","color","margin","Stat","Result","NotFound","Test","App","path","element","defaultState","createStore","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce90662.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header.a65d764d.jpeg\";","import { Link } from \"react-router-dom\";\nimport headerImage from '../../images/header.jpeg'\nimport './Nav.scss';\n\nexport const Nav = () => {\n  return (\n    <div className='nav'>\n      <Link to='/'>\n        <img src={headerImage} alt=\"header\" className=\"nav__image\"/>\n      </Link>\n      <nav className=\"nav__container\">\n        <ul className='nav__list'>\n\n          <li className='nav__item'>\n            <Link to='/dictionary' className='nav__link'>Словник</Link>\n          </li>\n\n          <li className='nav__item'>\n            <Link to='/add' className='nav__link'>Додати слова</Link>\n          </li>\n\n          <li className='nav__item'>\n            <Link to='/test' className='nav__link'>Перевірити</Link>\n          </li>\n\n          <li className='nav__item'>\n            <Link to='/result' className='nav__link'>Результати</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};","import { Link } from \"react-router-dom\"\nimport './Main.scss';\n\nexport const Main = () => {\n  return (\n    <div className=\"main\">\n      <h1 className=\"main__title\">\n        Привіт!\n      </h1>\n      <p className=\"main__content\">\n        Цей додаток створено щоб ви мали змогу попрактикуватись у вивченні іноземних слів.\n      </p>\n      <p className=\"main__content\">\n        Все просто. <Link to='/add' className=\"main__link\">Додавайте</Link> слова до свого словника, або тисніть кнопку \"Словник\". Створюйте свій особистий словничок та перевіряйте свою пам'ять беручи участь у простому тестуванні!\n      </p>\n      <p className=\"main__content main__content--last\">\n        Хай щастить! ;0)\n      </p>\n    </div>\n  )\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport './Dictionary.scss';\n\nexport const Dictionary = () => {\n  const dictionary = useSelector(store => store.dictionary);\n\n  return (\n    <div className=\"dictionary\">\n      <p className=\"dictionary__title\">\n        Це ваш словник:\n      </p>\n\n      {dictionary.length === 0 && (\n        <p className=\"dictionary__helper-text\">\n          Нажаль ваш словник покищо порожній,\n          але ви можете додати до нього деілька слів\n        </p>\n      )}\n\n      {dictionary.length > 0 && dictionary.length < 10 && (\n        <p className=\"dictionary__helper-text\">\n          Вітаю! Початок покладено.\n          <br />\n          Щоб розпочати перевірку додайте ще\n          {' '}{10 - dictionary.length}{' '}\n          {10 - dictionary.length >= 5\n            ? 'слів'\n            : 10 - dictionary.length !== 1\n              ? 'слова'\n              : 'слово'\n          }\n        </p>\n      )}\n\n      {dictionary.length >= 10 && (\n        <p className=\"dictionary__helper-text\">\n          Супер! Ви можете ропочати перевірку у будь який момент.\n        </p>\n      )}\n\n      <table className=\"dictionary__table table\">\n        <thead className=\"table__head\">\n          <tr>\n            <th className=\"table__item table__item--n\">№</th>\n            <th className=\"table__item table__item--word\">Слово</th>\n            <th className=\"table__item table__item--translate\">Переклад</th>\n          </tr>\n        </thead>\n        <tbody>\n          {dictionary.map((currentWord, index) => (\n            <tr key={currentWord.id}>\n              <td className=\"table__item table__item--n\">{index + 1}</td>\n              <td className=\"table__item table__item--word\">{currentWord.word}</td>\n              <td className=\"table__item table__item--translate\">{currentWord.translate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <Link to='/add' className=\"dictionary__button\">додати</Link>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/arrow.5c67ef04.png\";","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport arrowImage from '../../images/arrow.png';\nimport './AddForm.scss';\n\nexport const AddForm = () => {\n  const dispatch = useDispatch();\n  const dictionary = useSelector(store => store.dictionary);\n  // const regExp = new RegExp(\"[а-щА-ЩЬьЮюЯяЇїІіЄєҐґ]+$\");\n\n  const [word, setWord] = useState('');\n  const [translate, setTranslate] = useState('');\n  const [error, setError] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleAdderToDictionary = (word, translate) => {\n    if (!word || !translate) {\n      return\n    }\n\n    const alreadyHaveSuchWord = dictionary.find(checkWord => checkWord.word === word);\n\n    if (alreadyHaveSuchWord) {\n      setError('Це слово вже є у вашому словнику');\n      return\n    }\n\n    const newWord = {\n      id: new Date().getTime(),\n      word,\n      translate,\n    }\n\n\n    dispatch({type: 'ADD_WORD', payload: newWord})\n    setWord('')\n    setTranslate('')\n    navigate('/dictionary')\n  }\n\n  return (\n    <div className='form'>\n      <div className=\"form__word--container\">\n        Слово\n        <input\n          type=\"text\"\n          placeholder=\"Введіть слово\"\n          className=\"form__word--input\"\n          value={word}\n          onChange={(e) => {\n            if (error) {\n              setError('');\n            }\n\n            setWord(e.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <img src={arrowImage} alt=\"arrow\" className='form__arrow-image' />\n\n      <div className=\"form__word--container\">\n        Преклад\n        <input\n          type=\"text\"\n          placeholder=\"Введіть переклад\"\n          className=\"form__word--input\"\n          value={translate}\n          onChange={(e) => {\n            setTranslate(e.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        className='form__button'\n        onClick={() => {\n          handleAdderToDictionary(word, translate);\n        }}\n        hidden\n      >\n        додати\n      </button>\n\n      {error && (\n        <p style={{color: 'red', margin: 'auto'}}>\n          {error}\n        </p>\n      )}\n    </div>\n  );\n};","export const Stat = () => {\n  return (\n    <div>\n      <h1>\n        Stat\n      </h1>\n    </div>\n  )\n}","import { Link } from \"react-router-dom\"\n\nexport const Result = () => {\n  return (\n    <div>\n      <h1>\n        Result\n      </h1>\n      <br />\n      <Link to='/stat'>Stat</Link>\n    </div>\n  )\n}","export const NotFound = () => {\n  return (\n    <div>\n      <h1>\n        Sorry! We can`t found this page :(\n      </h1>\n    </div>\n  )\n}","export const Test = () => {\n  return (\n    <div>\n      <h1>\n        Test\n      </h1>\n    </div>\n  )\n}","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Nav } from './components/Nav/Nav';\nimport { Main } from './components/Main/Main'\nimport { Dictionary } from './components/Dictionary/Dictionary';\nimport { AddForm } from './components/AddForm/AddForm';\n\nimport { Stat } from './components/Stat'\nimport { Result } from './components/Result'\nimport { NotFound } from './components/NotFound'\n\nimport { Test } from './components/Test'\n\nexport const App = () => {\n  return (\n    <div>\n      <Nav />\n\n      <Routes>\n        <Route path='/' element={<Main />} />\n        <Route path='/dictionary' element={<Dictionary />} />\n        <Route path='/add' element={<AddForm />} />\n\n        <Route path='/stat' element={<Stat />} />\n        <Route path='/result' element={<Result />} />\n        <Route path='*' element={<NotFound />} />\n\n        <Route path='/test' element={<Test />} />\n      </Routes>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nconst defaultState = {\n  dictionary: []\n} \n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD_WORD':\n\n      return {...defaultState, dictionary: [...state.dictionary, action.payload]}\n    default:\n\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}